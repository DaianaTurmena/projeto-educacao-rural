# -*- coding: utf-8 -*-
"""An√°lise Explorat√≥ria - Educa√ß√£o Rural.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1abc123exemplo
"""

# PASSO 1: Importar bibliotecas
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from google.colab import files

print("‚úÖ Bibliotecas carregadas!")

# PASSO 2: Carregar dados
# IMPORTANTE: Primeiro voc√™ precisa baixar os dados do INEP
# 1. Acesse: https://www.gov.br/inep/pt-br/acesso-a-informacao/dados-abertos/microdados/censo-escolar
# 2. Baixe o arquivo "Microdados do Censo Escolar da Educa√ß√£o B√°sica 2022"
# 3. Suba o arquivo aqui:

uploaded = files.upload()

# PASSO 3: Pr√©-processamento
# Carregar o arquivo principal
escolas = pd.read_csv('microdados_ed_basica_2022.csv', sep=';', encoding='ISO-8859-1')

# Filtrar apenas escolas rurais
escolas_rural = escolas[escolas['TP_LOCALIZACAO'] == 2]  # C√≥digo 2 = Rural

# Selecionar colunas relevantes
colunas_selecionadas = [
    'CO_UF', 'NO_UF', 'CO_MUNICIPIO', 'NO_MUNICIPIO',
    'IN_AGUA_POTAVEL', 'IN_ENERGIA_REDE_PUBLICA', 'IN_ESGOTO_REDE_PUBLICA',
    'IN_LABORATORIO_INFORMATICA', 'IN_BIBLIOTECA_SALA_LEITURA',
    'IN_INTERNET', 'QT_SALAS_UTILIZADAS', 'QT_MAT_BAS'
]
dados = escolas_rural[colunas_selecionadas].copy()

# Renomear colunas
dados.rename(columns={
    'IN_AGUA_POTAVEL': 'AGUA_POTAVEL',
    'IN_ENERGIA_REDE_PUBLICA': 'ENERGIA',
    'IN_ESGOTO_REDE_PUBLICA': 'ESGOTO',
    'IN_LABORATORIO_INFORMATICA': 'LAB_INFORMATICA',
    'IN_BIBLIOTECA_SALA_LEITURA': 'BIBLIOTECA',
    'IN_INTERNET': 'INTERNET',
    'QT_SALAS_UTILIZADAS': 'SALAS',
    'QT_MAT_BAS': 'MATRICULAS'
}, inplace=True)

# Converter sim/n√£o para 1/0
for col in ['AGUA_POTAVEL', 'ENERGIA', 'ESGOTO', 'LAB_INFORMATICA', 'BIBLIOTECA', 'INTERNET']:
    dados[col] = dados[col].apply(lambda x: 1 if x == 'Sim' else 0)

print(f"üéØ Dados carregados: {dados.shape[0]} escolas rurais")

# PASSO 4: An√°lise Descritiva
# Resumo estat√≠stico
print("\nüìä Estat√≠sticas descritivas:")
print(dados.describe())

# Infraestrutura b√°sica
infra = dados[['AGUA_POTAVEL', 'ENERGIA', 'ESGOTO']].mean().reset_index()
infra.columns = ['Infraestrutura', 'Percentual']

plt.figure(figsize=(10,6))
sns.barplot(x='Infraestrutura', y='Percentual', data=infra)
plt.title('Disponibilidade de Infraestrutura B√°sica nas Escolas Rurais')
plt.ylabel('Percentual de Escolas com Acesso')
plt.ylim(0, 1)
plt.show()

# PASSO 5: An√°lise por Regi√£o
# Agrupar por estado
por_uf = dados.groupby('NO_UF').agg({
    'AGUA_POTAVEL': 'mean',
    'ENERGIA': 'mean',
    'INTERNET': 'mean',
    'MATRICULAS': 'sum'
}).reset_index()

# Top 5 estados com menor acesso √† internet
top5_internet = por_uf.sort_values('INTERNET').head(5)

plt.figure(figsize=(12,6))
sns.barplot(x='NO_UF', y='INTERNET', data=top5_internet)
plt.title('Estados com Menor Acesso √† Internet nas Escolas Rurais')
plt.xlabel('Estado')
plt.ylabel('Percentual de Escolas com Internet')
plt.show()

# PASSO 6: Correla√ß√µes
# Calcular correla√ß√µes
corr_matrix = dados[['AGUA_POTAVEL', 'ENERGIA', 'ESGOTO', 'LAB_INFORMATICA', 'BIBLIOTECA', 'INTERNET']].corr()

# Mapa de calor
plt.figure(figsize=(10,8))
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', vmin=-1, vmax=1)
plt.title('Correla√ß√£o entre Infraestruturas Escolares')
plt.show()

# PASSO 7: Salvar dados processados
dados.to_csv('dados_escolas_rurais_processados.csv', index=False)
files.download('dados_escolas_rurais_processados.csv')

print("‚úÖ An√°lise conclu√≠da! Dados processados salvos.")